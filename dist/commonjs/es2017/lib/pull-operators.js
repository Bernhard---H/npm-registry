'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.PullOperators = undefined;

var _utils = require('@orbit/utils');

var _data = require('@orbit/data');

var _abstractOperators = require('./abstract-operators');

function deserialize(source, document) {
    const deserialized = source.serializer.deserializeDocument(document);
    const records = (0, _utils.toArray)(deserialized.data);
    if (deserialized.included) {
        Array.prototype.push.apply(records, deserialized.included);
    }
    const operations = records.map(record => {
        return {
            op: 'replaceRecord',
            record
        };
    });
    return [(0, _data.buildTransform)(operations)];
}
const PullOperators = exports.PullOperators = {
    findRecord(source, query) {
        return _abstractOperators.AbstractOperators.findRecord(source, query).then(data => deserialize(source, data));
    },
    findRecords(source, query) {
        return _abstractOperators.AbstractOperators.findRecords(source, query).then(data => deserialize(source, data));
    },
    findRelatedRecord(source, query) {
        return _abstractOperators.AbstractOperators.findRelatedRecord(source, query).then(data => deserialize(source, data));
    },
    findRelatedRecords(source, query) {
        return _abstractOperators.AbstractOperators.findRelatedRecords(source, query).then(data => deserialize(source, data));
    }
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxpYi9wdWxsLW9wZXJhdG9ycy5qcyJdLCJuYW1lcyI6WyJkZXNlcmlhbGl6ZSIsInNvdXJjZSIsImRvY3VtZW50IiwiZGVzZXJpYWxpemVkIiwic2VyaWFsaXplciIsImRlc2VyaWFsaXplRG9jdW1lbnQiLCJyZWNvcmRzIiwiZGF0YSIsImluY2x1ZGVkIiwiQXJyYXkiLCJwcm90b3R5cGUiLCJwdXNoIiwiYXBwbHkiLCJvcGVyYXRpb25zIiwibWFwIiwicmVjb3JkIiwib3AiLCJQdWxsT3BlcmF0b3JzIiwiZmluZFJlY29yZCIsInF1ZXJ5IiwiQWJzdHJhY3RPcGVyYXRvcnMiLCJ0aGVuIiwiZmluZFJlY29yZHMiLCJmaW5kUmVsYXRlZFJlY29yZCIsImZpbmRSZWxhdGVkUmVjb3JkcyJdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBOztBQUNBOztBQUNBOztBQUNBLFNBQVNBLFdBQVQsQ0FBcUJDLE1BQXJCLEVBQTZCQyxRQUE3QixFQUF1QztBQUNuQyxVQUFNQyxlQUFlRixPQUFPRyxVQUFQLENBQWtCQyxtQkFBbEIsQ0FBc0NILFFBQXRDLENBQXJCO0FBQ0EsVUFBTUksVUFBVSxvQkFBUUgsYUFBYUksSUFBckIsQ0FBaEI7QUFDQSxRQUFJSixhQUFhSyxRQUFqQixFQUEyQjtBQUN2QkMsY0FBTUMsU0FBTixDQUFnQkMsSUFBaEIsQ0FBcUJDLEtBQXJCLENBQTJCTixPQUEzQixFQUFvQ0gsYUFBYUssUUFBakQ7QUFDSDtBQUNELFVBQU1LLGFBQWFQLFFBQVFRLEdBQVIsQ0FBWUMsVUFBVTtBQUNyQyxlQUFPO0FBQ0hDLGdCQUFJLGVBREQ7QUFFSEQ7QUFGRyxTQUFQO0FBSUgsS0FMa0IsQ0FBbkI7QUFNQSxXQUFPLENBQUMsMEJBQWVGLFVBQWYsQ0FBRCxDQUFQO0FBQ0g7QUFDTSxNQUFNSSx3Q0FBZ0I7QUFDekJDLGVBQVdqQixNQUFYLEVBQW1Ca0IsS0FBbkIsRUFBMEI7QUFDdEIsZUFBT0MscUNBQWtCRixVQUFsQixDQUE2QmpCLE1BQTdCLEVBQXFDa0IsS0FBckMsRUFBNENFLElBQTVDLENBQWlEZCxRQUFRUCxZQUFZQyxNQUFaLEVBQW9CTSxJQUFwQixDQUF6RCxDQUFQO0FBQ0gsS0FId0I7QUFJekJlLGdCQUFZckIsTUFBWixFQUFvQmtCLEtBQXBCLEVBQTJCO0FBQ3ZCLGVBQU9DLHFDQUFrQkUsV0FBbEIsQ0FBOEJyQixNQUE5QixFQUFzQ2tCLEtBQXRDLEVBQTZDRSxJQUE3QyxDQUFrRGQsUUFBUVAsWUFBWUMsTUFBWixFQUFvQk0sSUFBcEIsQ0FBMUQsQ0FBUDtBQUNILEtBTndCO0FBT3pCZ0Isc0JBQWtCdEIsTUFBbEIsRUFBMEJrQixLQUExQixFQUFpQztBQUM3QixlQUFPQyxxQ0FBa0JHLGlCQUFsQixDQUFvQ3RCLE1BQXBDLEVBQTRDa0IsS0FBNUMsRUFBbURFLElBQW5ELENBQXdEZCxRQUFRUCxZQUFZQyxNQUFaLEVBQW9CTSxJQUFwQixDQUFoRSxDQUFQO0FBQ0gsS0FUd0I7QUFVekJpQix1QkFBbUJ2QixNQUFuQixFQUEyQmtCLEtBQTNCLEVBQWtDO0FBQzlCLGVBQU9DLHFDQUFrQkksa0JBQWxCLENBQXFDdkIsTUFBckMsRUFBNkNrQixLQUE3QyxFQUFvREUsSUFBcEQsQ0FBeURkLFFBQVFQLFlBQVlDLE1BQVosRUFBb0JNLElBQXBCLENBQWpFLENBQVA7QUFDSDtBQVp3QixDQUF0QiIsImZpbGUiOiJsaWIvcHVsbC1vcGVyYXRvcnMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyB0b0FycmF5IH0gZnJvbSAnQG9yYml0L3V0aWxzJztcbmltcG9ydCB7IGJ1aWxkVHJhbnNmb3JtIH0gZnJvbSAnQG9yYml0L2RhdGEnO1xuaW1wb3J0IHsgQWJzdHJhY3RPcGVyYXRvcnMgfSBmcm9tIFwiLi9hYnN0cmFjdC1vcGVyYXRvcnNcIjtcbmZ1bmN0aW9uIGRlc2VyaWFsaXplKHNvdXJjZSwgZG9jdW1lbnQpIHtcbiAgICBjb25zdCBkZXNlcmlhbGl6ZWQgPSBzb3VyY2Uuc2VyaWFsaXplci5kZXNlcmlhbGl6ZURvY3VtZW50KGRvY3VtZW50KTtcbiAgICBjb25zdCByZWNvcmRzID0gdG9BcnJheShkZXNlcmlhbGl6ZWQuZGF0YSk7XG4gICAgaWYgKGRlc2VyaWFsaXplZC5pbmNsdWRlZCkge1xuICAgICAgICBBcnJheS5wcm90b3R5cGUucHVzaC5hcHBseShyZWNvcmRzLCBkZXNlcmlhbGl6ZWQuaW5jbHVkZWQpO1xuICAgIH1cbiAgICBjb25zdCBvcGVyYXRpb25zID0gcmVjb3Jkcy5tYXAocmVjb3JkID0+IHtcbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgIG9wOiAncmVwbGFjZVJlY29yZCcsXG4gICAgICAgICAgICByZWNvcmRcbiAgICAgICAgfTtcbiAgICB9KTtcbiAgICByZXR1cm4gW2J1aWxkVHJhbnNmb3JtKG9wZXJhdGlvbnMpXTtcbn1cbmV4cG9ydCBjb25zdCBQdWxsT3BlcmF0b3JzID0ge1xuICAgIGZpbmRSZWNvcmQoc291cmNlLCBxdWVyeSkge1xuICAgICAgICByZXR1cm4gQWJzdHJhY3RPcGVyYXRvcnMuZmluZFJlY29yZChzb3VyY2UsIHF1ZXJ5KS50aGVuKGRhdGEgPT4gZGVzZXJpYWxpemUoc291cmNlLCBkYXRhKSk7XG4gICAgfSxcbiAgICBmaW5kUmVjb3Jkcyhzb3VyY2UsIHF1ZXJ5KSB7XG4gICAgICAgIHJldHVybiBBYnN0cmFjdE9wZXJhdG9ycy5maW5kUmVjb3Jkcyhzb3VyY2UsIHF1ZXJ5KS50aGVuKGRhdGEgPT4gZGVzZXJpYWxpemUoc291cmNlLCBkYXRhKSk7XG4gICAgfSxcbiAgICBmaW5kUmVsYXRlZFJlY29yZChzb3VyY2UsIHF1ZXJ5KSB7XG4gICAgICAgIHJldHVybiBBYnN0cmFjdE9wZXJhdG9ycy5maW5kUmVsYXRlZFJlY29yZChzb3VyY2UsIHF1ZXJ5KS50aGVuKGRhdGEgPT4gZGVzZXJpYWxpemUoc291cmNlLCBkYXRhKSk7XG4gICAgfSxcbiAgICBmaW5kUmVsYXRlZFJlY29yZHMoc291cmNlLCBxdWVyeSkge1xuICAgICAgICByZXR1cm4gQWJzdHJhY3RPcGVyYXRvcnMuZmluZFJlbGF0ZWRSZWNvcmRzKHNvdXJjZSwgcXVlcnkpLnRoZW4oZGF0YSA9PiBkZXNlcmlhbGl6ZShzb3VyY2UsIGRhdGEpKTtcbiAgICB9XG59OyJdfQ==